# Talk Starter · Minimal

*A Quarto + reveal.js starter for academic and scientific talks with multi-brand profiles*

This repository provides a **minimal, reproducible slide deck scaffold** for teaching, seminars, and research presentations built on **Quarto** and **reveal.js**. It includes **multiple brand profiles** (e.g., `posit`, `ehu-eu`, `ehu-es`) that share a **common color palette**, while each profile selects its own font families/weights. Slides render locally with `quarto preview --profile <name>` and require **Quarto ≥ 1.6**. The project expects local font files (Inter + EHU Sans/Serif) and centralizes color utilities and `@font-face` rules in `brand-core.css`. ([GitHub][1])

---

## Table of contents

- [Talk Starter · Minimal](#talk-starter--minimal)
  - [Table of contents](#table-of-contents)
  - [1. Rationale and audience](#1-rationale-and-audience)
  - [2. Requirements](#2-requirements)
  - [3. Quick start](#3-quick-start)
  - [4. Repository structure](#4-repository-structure)
  - [5. Profiles \& branding](#5-profiles--branding)
  - [6. Authoring model (Quarto + reveal.js)](#6-authoring-model-quarto--revealjs)

---

## 1. Rationale and audience

This starter emphasizes **high legibility, minimal ornamentation, and assertion–evidence rhetoric** for STEM audiences—typical of lectures, research talks, and defenses. In assertion–evidence design, each slide advances a short **claim** (headline) supported by **visual or textual evidence** (figure, equation, table, or brief block). The approach is well-documented to improve understanding and recall in technical presentations and has been widely adopted in academic contexts. ([assertion-evidence.com][2])

The layout and defaults also reflect research on **multimedia learning** and **cognitive load**: coherence (removing extraneous material), signaling (cueing structure), and spatial/temporal contiguity (placing text near corresponding visuals; pacing with fragments). ([Cambridge University Press & Assessment][3])

---

## 2. Requirements

* **Quarto** ≥ **1.6** (CLI + your preferred editor). ([GitHub][1])
* Modern browser (Chrome/Firefox/Edge/Safari) for local preview of reveal.js decks.
* Optional fonts (see §5): **Inter** variable, **EHU Sans**, **EHU Serif**. ([GitHub][1])

Helpful references: Quarto projects, reveal.js format, and shortcodes/meta. ([Quarto][4])

---

## 3. Quick start

1. **Clone** or download this repository.
2. **Install fonts** (optional but recommended): place files at the paths below (see §5). ([GitHub][1])
3. **Preview** a brand/profile (pick one):

```bash
quarto preview --profile posit    # Inter (Posit-like)
quarto preview --profile ehu-eu   # EHUSerif-first (Basque-first)
quarto preview --profile ehu-es   # EHUSans-first (Spanish-first)
```

The README index text, profile names, and preview commands are defined in this repository. ([GitHub][1])

---

## 4. Repository structure

At a glance (top-level):

```
_extensions/                 # brand and utility assets (fonts, brand-core.css, etc.)
images/                      # example images for slides
styles/                      # additional CSS helpers (if any)
index_00.qmd, index_01.qmd, index_02.qmd, index_03.qmd  # sample decks
_quarto.yml                  # base project config
_quarto-posit.yml            # Posit-branded profile
_quarto-ehu-eu.yml           # EHU Basque-first profile
_quarto-ehu-es.yml           # EHU Spanish-first profile
_quarto-standard.yml         # a standard/neutral profile
styles.scss                  # project styles entry-point
README.md
```

See the repository’s file list for the canonical, up-to-date structure. ([GitHub][1])

---

## 5. Profiles & branding

This starter uses **Quarto project profiles** so a single source can render under multiple “skins.” Profiles selectively change typography while **sharing a common color palette** and utilities. All `@font-face` rules and color helpers live in:

```
_extensions/thermomat/ehu/styles/brand-core.css
```

Each brand profile YAML selects **families/weights**; **colors are shared across skins**, so decks remain visually consistent across profiles. Expected font file locations:

```
Inter variable: _extensions/thermomat/ehu/fonts/Inter/Inter-Variable.woff2 (+ italic)
EHUSans:        _extensions/thermomat/ehu/fonts/EHU_Sans/...
EHUSerif:       _extensions/thermomat/ehu/fonts/EHU_Serif/...
```

(Place your licensed/authorized files at those paths.) ([GitHub][1])

For background on **profiles** in Quarto, see the official documentation. ([Quarto][5])

---

## 6. Authoring model (Quarto + reveal.js)

* **Format**: Slides are written in `.qmd` using **Quarto’s** `revealjs` output. ([Quarto][6])
* **Reusable content**: Prefer Quarto **includes** and the **`meta`** shortcode to pass per-slide variables into partials, enabling clean, parameterized templates without duplication. ([Quarto][7])

**Pattern: include + meta**


```markdown
---
slide:
  title:    "Key assertion (≤ 12 words)"
  figure:   "/images/example.png"
  alt:      "Description for screen readers"
  caption:  "Short, adjacent caption"
  text:     "Evidence in ~40–70 words."
  fragments: true
---

```

`{{< include /templates/_concept-with-diagram.qmd >}}`





- `{{< include ... >}}` brings in a partial; `{{< meta slide.key >}}` reads values from the document metadata. :contentReference[oaicite:13]{index=13}

---

## 7. Progressive disclosure (fragments)

For pacing, **reveal.js fragments** incrementally reveal elements marked with the `fragment` class (e.g., figures, paragraphs, equations). This supports **segmenting** and reduces extraneous processing for learners. :contentReference[oaicite:14]{index=14}

- Reveal.js fragments reference: official docs. :contentReference[oaicite:15]{index=15}  
- Quarto’s advanced reveal docs (fragments & incremental display). :contentReference[oaicite:16]{index=16}  
- Small demo of fragment styles in Quarto’s examples. :contentReference[oaicite:17]{index=17}

---

## 8. Accessibility baseline

This starter aims for **WCAG 2.x color contrast**: at least **4.5:1** for normal text and **3:1** for large text (AA), with **7:1** / **4.5:1** targets (AAA) where feasible. The shared palette in `brand-core.css` and conservative typography help meet these thresholds; you should still validate figures/captions against complex image backgrounds. :contentReference[oaicite:18]{index=18}

---

## 9. Printing/Export to PDF

Reveal.js supports a **print view** suitable for PDF export; in Quarto preview, use the print view and your browser’s “Save as PDF” with **Landscape**, **No margins**, and **Background graphics** enabled. You can also append `?print-pdf` to the deck URL. For fully automated workflows, tools like **Decktape** (headless Chrome) are popular. :contentReference[oaicite:19]{index=19}

---

## 10. Optional: Extended slide templates

If you wish to expand beyond the baseline sample decks, you can add a **parameterized template set** (e.g., reusable Quarto partials for equations, diagrams, proofs, comparisons, pipelines, timelines, assignments, polls, etc.). The recommended integration patterns are:

- **Local include**: place partials under `/templates` and include them with `{{< include /templates/_name.qmd >}}` (then provide values via `slide:` metadata as in §6). :contentReference[oaicite:20]{index=20}  
- **As an extension**: place a directory under `/_extensions/<org>/<name>` and manage via `quarto add|list|update`. Extensions are **project-local**; no global install is required. :contentReference[oaicite:21]{index=21}

To scaffold a shortcode-based extension (so authors can write `{{< slide-equation eq="..." >}}`), see **“Creating Shortcodes.”** :contentReference[oaicite:22]{index=22}

---

## 11. Troubleshooting

- **Fonts not applying / fallbacks**  
  Ensure Inter/EHU fonts are installed at the expected paths under `_extensions/thermomat/ehu/fonts/...`. Check the browser dev tools → **Network** for 404s; verify `brand-core.css` is loaded. :contentReference[oaicite:23]{index=23}

- **Fragments not stepping**  
  Confirm that elements have class `fragment`. See reveal.js fragment guide for valid modifiers and behaviors. :contentReference[oaicite:24]{index=24}

- **Includes show literal `{{< include ... >}}`**  
  You may be previewing with a non-Quarto pipeline. Render/preview with `quarto` and ensure the include path is correct (absolute from project root is safest). :contentReference[oaicite:25]{index=25}

- **Multiple brands / profiles**  
  Render with an explicit profile: `quarto preview --profile ehu-eu`. See Quarto profiles reference. :contentReference[oaicite:26]{index=26}

- **PDF export quality**  
  Use reveal’s print view with browser settings recommended in §9. For CI or fully automated export, adopt Decktape/Playwright. :contentReference[oaicite:27]{index=27}

---

## 12. Contributing

Contributions are welcome (issues, discussions, or PRs) for:

- layout refinements that preserve minimalism and legibility,  
- accessibility improvements (contrast, alt text patterns, keyboard navigation),  
- additional profiles that **re-use** the shared palette while swapping families/weights,  
- teaching-focused partials/templates that implement assertion–evidence slides and gentle fragment pacing.

Please keep changes **small and well-scoped**, and accompany them with a short rationale.

---

## 13. License

As of this writing, the repository **does not include a LICENSE file**. Absent a license, the default legal position is **exclusive copyright (“all rights reserved”)**: others may _view_ the code but **do not have permission to use, modify, or redistribute** it. If your intent is to permit reuse, please add an explicit license (e.g., MIT, BSD-3-Clause, Apache-2.0, CC BY for non-code assets, or a public-domain dedication like CC0/Unlicense). :contentReference[oaicite:28]{index=28}

---

## References

- **This repository’s current README and structure (profiles, fonts, brand-core.css; Quarto ≥ 1.6; preview commands).** :contentReference[oaicite:29]{index=29}  
- **Quarto**: projects; reveal.js format; includes; shortcodes/meta; advanced reveal; presenting/print to PDF. :contentReference[oaicite:30]{index=30}  
- **reveal.js**: framework and fragments; PDF export. :contentReference[oaicite:31]{index=31}  
- **Accessibility (contrast)**: WCAG 2.1/2.2 contrast criteria and practical checkers. :contentReference[oaicite:32]{index=32}  
- **Pedagogy**: assertion–evidence approach; multimedia learning principles (coherence, signaling, spatial & temporal contiguity; segmenting). :contentReference[oaicite:33]{index=33}

---

### Appendix A. Why this starter works for teaching

- **Assertion–evidence** slides encourage eye contact and reduce on-slide text, making room for figures/equations and lecturer narration. :contentReference[oaicite:34]{index=34}  
- **Fragments** create **paced segments**, aligning with the **segmenting principle** and keeping working memory load in check. :contentReference[oaicite:35]{index=35}  
- **Spatial contiguity** is respected by locating captions close to visuals, avoiding split attention. :contentReference[oaicite:36]{index=36}  
- **Profiles** let you **switch brand typography** without touching content, fostering reuse and consistency across courses and talks. :contentReference[oaicite:37]{index=37}

---

### Appendix B. Common tasks

- **Create a new website-style project** (optional, for nav across multiple decks):

```bash
quarto create project website myslides
cd myslides
quarto preview
````

(Website projects provide navigation and site-level options in `_quarto.yml`.) ([Quarto][8])

* **Manage extensions** locally within a project:

```bash
# from the project root
quarto add quarto-ext/fontawesome
quarto list extensions
```

(Extensions live under `./_extensions` and are **project-local**.) ([Quarto][9])

---

> *If you would like, I can adapt this README to include a “Templates” section pointing at a curated `/templates` directory (with example includes) once you add or vend your preferred partials.*

[1]: https://github.com/jmigartua/talk-starter-minimal "GitHub - jmigartua/talk-starter-minimal"
[2]: https://www.assertion-evidence.com/?utm_source=chatgpt.com "The assertion-evidence approach will make your talks more ..."
[3]: https://www.cambridge.org/core/books/cambridge-handbook-of-multimedia-learning/principles-for-reducing-extraneous-processing-in-multimedia-learning-coherence-signaling-redundancy-spatial-contiguity-and-temporal-contiguity-principles/CD5B7AE1279A9AB81F8EEBB53DBEC86E?utm_source=chatgpt.com "12 - Principles for Reducing Extraneous Processing in ..."
[4]: https://quarto.org/docs/projects/quarto-projects.html?utm_source=chatgpt.com "Project Basics"
[5]: https://quarto.org/docs/projects/profiles.html?utm_source=chatgpt.com "Project Profiles"
[6]: https://quarto.org/docs/presentations/revealjs/?utm_source=chatgpt.com "Revealjs"
[7]: https://quarto.org/docs/authoring/includes.html?utm_source=chatgpt.com "Includes"
[8]: https://quarto.org/docs/websites/?utm_source=chatgpt.com "Creating a Website"
[9]: https://quarto.org/docs/extensions/managing.html?utm_source=chatgpt.com "Managing Extensions"
